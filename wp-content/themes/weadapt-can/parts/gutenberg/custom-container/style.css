.wp-block-custom-container{font-size:1rem;line-height:1.3125}@media(min-width: 768px){.wp-block-custom-container{font-size:1.125rem;line-height:1.5}}.wp-block-custom-container h1:not([class]),.wp-block-custom-container h2:not([class]),.wp-block-custom-container h3:not([class]),.wp-block-custom-container h4:not([class]),.wp-block-custom-container h5:not([class]),.wp-block-custom-container h6:not([class]){font-weight:600}.wp-block-custom-container h1:not([class]):last-child,.wp-block-custom-container h2:not([class]):last-child,.wp-block-custom-container h3:not([class]):last-child,.wp-block-custom-container h4:not([class]):last-child,.wp-block-custom-container h5:not([class]):last-child,.wp-block-custom-container h6:not([class]):last-child{margin-bottom:0}.wp-block-custom-container h2:not([class]){margin-bottom:2.5rem}.wp-block-custom-container h4:not([class]){margin:1.25rem 0}.wp-block-custom-container h5:not([class]),.wp-block-custom-container h6:not([class]){font-size:1.125rem;line-height:1.5;margin:1.25rem 0}.wp-block-custom-container p{letter-spacing:-0.005625rem}.wp-block-custom-container ul,.wp-block-custom-container ol{letter-spacing:-0.005625rem}.wp-block-custom-container ul li,.wp-block-custom-container ol li{margin-bottom:1.25rem !important}.wp-block-custom-container ul li:last-child,.wp-block-custom-container ol li:last-child{margin-bottom:0 !important}.wp-block-custom-container ul.has-color,.wp-block-custom-container ol.has-color{margin:1.25rem 0;font-weight:600;color:var(--color--red);padding-left:1.6875rem !important}.wp-block-custom-container ol{padding-left:0.625rem !important}.wp-block-custom-container .wp-block-table{margin:2.25rem 0}.wp-block-custom-container .wp-block-table td{vertical-align:top;border:0;padding:0.75rem 1rem}.wp-block-custom-container .wp-block-table tr:nth-child(even){background:var(--color--bg)}.wp-block-custom-container .wp-block-table tr:nth-child(odd){background:var(--color--dark-bg)}.wp-block-custom-container .wp-block-heading a{font-weight:600}@media(max-width: 767px){.wp-block-custom-container .wp-block-spacer{height:2.5rem !important}}.wp-block-custom-container .wp-block-spacer+.wp-block-heading{margin-bottom:0}@media(max-width: 991px){.wp-block-custom-container .wp-block-custom-columns{gap:2.5rem}}.wp-block-custom-container .wp-block-custom-column section{border:0;margin-bottom:2.25rem}.wp-block-custom-container .wp-block-custom-column section:last-child{margin-bottom:0}.wp-block-custom-container .wp-block-custom-column>*:last-child{margin-bottom:0 !important}@media(min-width: 992px){.wp-block-custom-container .wp-block-custom-column.col-lg-8{flex:0 0 65%;max-width:65%;padding:0 0.125rem 0 1rem}}@media(min-width: 992px){.wp-block-custom-container .wp-block-custom-column.col-lg-4{flex:0 0 35%;max-width:35%;padding-left:2rem}}@media(min-width: 992px){.wp-block-custom-container .wp-block-custom-column:first-of-type{padding-right:5.625rem}}@media(min-width: 992px){.wp-block-custom-container .wp-block-custom-column:last-child{border-left:0.0625rem solid var(--color--border)}}.wp-block-custom-container.podcast{background:var(--color--text)}.theme--dark .wp-block-custom-container.podcast{background:var(--color--bg)}.wp-block-custom-container.podcast .wp-block-heading{color:var(--color--white);margin-bottom:2.5rem}@media(min-width: 768px){.wp-block-custom-container.podcast .wp-block-heading{margin-bottom:3rem}}.wp-block-custom-container .query__container{padding:0}.wp-block-custom-container .query .row{flex-direction:column;gap:2.25rem}.wp-block-custom-container .query .col-12{flex-basis:100% !important;max-width:100% !important}.wp-block-custom-container .query .cpt-list-item{background:var(--color--dark-bg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
