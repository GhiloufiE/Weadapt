.single-tags{margin:5rem 0}.single-tags__list{display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0;gap:0.5rem}.single-tags__link{display:block;padding:0.375rem;font-family:var(--font-family-headings);font-weight:var(--font-weight-heading);color:var(--static-color--text);border-radius:0.3125rem;background-color:var(--color--bg-to-white-reverse);font-size:0.875rem;line-height:1.5714285714;border:0.125rem solid var(--color--bg-to-white-reverse);transition:color var(--transition-speed) var(--transition-timing-function),background-color var(--transition-speed) var(--transition-timing-function),border var(--transition-speed) var(--transition-timing-function)}.single-tags__link:hover{color:var(--color--white);background-color:var(--color--black);border-color:var(--color--black)}.theme--dark .single-tags__link:hover{color:var(--static-color--white);background-color:rgba(0,0,0,0)}@media(min-width: 768px){.single-tags__link{padding:0.4375rem 0.875rem}}.single-tags{margin:2.5rem 0}.single-tags__link{color:var(--color--white);border-color:var(--color--link) !important;font-weight:500;background-color:var(--color--link)}.single-tags__link:hover{background:rgba(0,0,0,0);color:var(--color--text)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
