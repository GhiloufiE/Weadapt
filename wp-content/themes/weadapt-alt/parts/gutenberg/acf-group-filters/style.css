.group-filters{background-color:var(--color--white)}.group-filters.background-light{background-color:var(--color--bg)}.group-filters.background-light .cpt-list-item__tag-item{background-color:var(--static-color--white);border-color:var(--static-color--white)}.group-filters.background-light .cpt-list-item__tag-item:hover{background-color:var(--color--black);border-color:var(--color--black)}.theme--dark .group-filters.background-light .cpt-list-item__tag-item:hover{background-color:rgba(0,0,0,0)}.group-filters .tabs-container{max-width:41.25rem;margin-bottom:2.5rem;position:relative}.group-filters .tabs-container::after{content:"";height:0.125rem;position:absolute;bottom:0;right:0;left:0;border-radius:1.25rem;background:var(--color--border)}.group-filters .tabs-container ul{margin:0;list-style-type:none;padding:0;display:flex;flex-wrap:wrap}.group-filters .tabs-container ul li{margin-right:1.25rem;padding-bottom:0.5rem;position:relative;color:var(--color--text);border:0;background:rgba(0,0,0,0);box-shadow:none;opacity:.5;transition:opacity var(--transition-speed) var(--transition-timing-function);font-size:1rem;line-height:1.375}@media(max-width: 767px){.group-filters .tabs-container ul li{padding-bottom:0.25rem;margin-bottom:0.25rem}}.group-filters .tabs-container ul li::after{position:absolute;bottom:0;left:0;content:"";width:0;height:0.125rem;transition:width var(--transition-speed) var(--transition-timing-function);background:var(--color--secondary)}.theme--dark .group-filters .tabs-container ul li::after{background:var(--color--black)}.group-filters .tabs-container ul li:hover,.group-filters .tabs-container ul li.selected{opacity:1}.group-filters .tabs-container ul li:hover::after,.group-filters .tabs-container ul li.selected::after{width:100%}.group-filters .cpt-query{margin-bottom:6.25rem}.group-filters .cpt-query__heading{font-size:1.5rem;line-height:1.4166666667}.group-filters .cpt-query.hidden-tab .cpt-latest,.group-filters .cpt-query.hidden-tab .cpt-more,.group-filters .cpt-query.hidden-tab .cpt-query__heading{display:none;margin-bottom:0}.group-filters .filter-container{display:flex;align-items:start;width:100%;gap:0 2rem;flex-wrap:wrap}.group-filters .filter-container .dropdowns-container{display:flex;gap:0 2rem;flex-wrap:wrap}@media(max-width: 768px){.group-filters .filter-container .dropdowns-container{justify-content:end}}.group-filters .filter-container .dropdowns-container .cpt-filters__item{margin-bottom:0.75rem}.group-filters .filter-container .cpt-filters__form__search{max-width:28.75rem;margin-right:auto;margin-top:0;margin-bottom:1rem;height:2rem}.group-filters .filter-container .cpt-filters__form__search svg{padding:0}.group-filters .filter-container .cpt-filters__form__search *{height:100%;font-size:0.875rem;line-height:1.4285714286;padding:0.375rem 1rem}.group-filters .filter-container .cpt-filters__form__search>input{border-radius:6.25rem}.group-filters__container>*:first-child{margin-top:0 !important}.group-filters__heading,.group-filters__description{margin-bottom:1.875rem}.group-filters__button{margin-top:3.5rem;text-align:center}.group-filters__empty-results:not(:first-child){margin-top:1.25rem}.group-filters .cpt-latest{gap:3.5rem 0}@media(min-width: 768px){.group-filters .cpt-latest{margin-top:4.9375rem}}.group-filters .cpt-latest .cpt-list-item{display:block}.group-filters .cpt-latest .cpt-list-item__image{margin-left:0;background-color:var(--static-color--bg);border-radius:0.3125rem;position:relative;max-width:100%;margin-bottom:1.25rem;height:14.375rem}.group-filters .cpt-latest .cpt-list-item__image-link{display:flex;align-items:flex-end;justify-content:center;padding:1rem 1rem 0;height:14.375rem}@media(min-width: 768px){.group-filters .cpt-latest .cpt-list-item__image-link{padding:1.3125rem 1.5rem 0}}.group-filters .cpt-latest .cpt-list-item__image img{display:block;object-fit:contain;border-radius:0.3125rem 0.3125rem 0 0;max-width:100%;max-height:100%;width:auto;height:auto}.group-filters .cpt-latest .cpt-list-item__title a:hover{color:var(--color--link-hover)}.group-filters__heading{font-size:1.875rem;line-height:1.4;margin-bottom:1.5rem}.group-filters__description{font-size:1.125rem;line-height:1.5;margin-bottom:1.5rem}.group-filters .cpt-latest{gap:1.5rem 0}@media(min-width: 768px){.group-filters .cpt-latest{margin-top:2rem}}.group-filters .cpt-latest .cpt-list-item{border:1px solid #4e7e77;border-radius:0.625rem;height:100%;position:relative;padding:0.625rem 0.75rem 1.5rem 0.75rem}.group-filters .cpt-latest .cpt-list-item__image{margin-left:0;background-color:var(--static-color--bg);border-radius:0.3125rem;position:relative;width:100%;height:0;padding-bottom:50%;margin-bottom:1rem}.group-filters .cpt-latest .cpt-list-item__image-link{position:absolute;top:0;bottom:0;padding:0 0 0;width:100%;height:100%;overflow:hidden}.group-filters .cpt-latest .cpt-list-item__image img{display:block;object-fit:cover;border-radius:0.3125rem 0.3125rem 0 0;width:100%;height:100%}.group-filters .cpt-latest .cpt-list-item__content{margin-bottom:3.875rem}.group-filters .cpt-latest .cpt-list-item__title{font-size:1.25rem;line-height:1.25rem;font-weight:500;margin-bottom:1rem}.group-filters .cpt-latest .cpt-list-item__title a:hover{color:var(--color--link-hover)}.group-filters .cpt-latest .cpt-list-item .wp-block-button{position:absolute;bottom:1.5rem;display:flex;align-items:center;width:fit-content}.group-filters .cpt-latest .cpt-list-item .wp-block-button__link{height:unset;padding:0.5rem 1rem;border-radius:0.3125rem;font-size:0.875rem;line-height:1.4}.group-filters .cpt-latest .cpt-list-item .wp-block-button span{margin-right:0.5rem}.group-filters .cpt-latest .cpt-list-item .wp-block-button svg{width:1rem;height:1rem}.blog-1 .group-filters .cpt-filters__form__search{margin-bottom:0.75rem;height:2.875rem}.group-filters .row{display:grid;gap:1rem;grid-template-columns:1fr;margin-left:0;margin-right:0}@media(min-width: 576px){.group-filters .row{grid-template-columns:repeat(2, 1fr)}}@media(min-width: 768px){.group-filters .row{grid-template-columns:repeat(3, 1fr)}}@media(min-width: 992px){.group-filters .row{gap:1.75rem}}.group-filters .custom-results-count{grid-column:1/4;top:0}@media(max-width: 768px){.group-filters .custom-results-count{grid-column:1/3}}@media(max-width: 576px){.group-filters .custom-results-count{grid-column:1/2}}.group-filters .cpt-query__heading{font-size:1.75rem;line-height:1.4285714286}@media(min-width: 768px){.group-filters .cpt-query__heading{font-size:2.5rem;line-height:1.4}}.group-filters .filter-container .cpt-filters__form__search{margin-bottom:0.75rem;height:3rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
