.image-text-read-more{background-color:var(--color--bg)}@media(min-width: 768px){.image-text-read-more:not(.block-spacing--pb) .image-text-read-more__content{padding-bottom:4rem}}@media(min-width: 768px){.image-text-read-more:not(.block-spacing--pt) .image-text-read-more__content{padding-top:4rem}}.image-text-read-more.background-white{background-color:var(--color--white)}@media(min-width: 768px){.image-text-read-more__row.alignment-center{align-items:center}.image-text-read-more__row.alignment-bottom{align-items:flex-end}.image-text-read-more__row.alignment-top{align-items:flex-start}}.image-text-read-more__col--image{order:1}@media(min-width: 768px){.image-text-read-more__col--image{order:initial}}@media(min-width: 768px){.image-text-read-more__col--image.right{order:1}}.image-text-read-more__description>*:last-child{margin-bottom:0}.image-text-read-more__description h1,.image-text-read-more__description h2,.image-text-read-more__description h3,.image-text-read-more__description h4,.image-text-read-more__description h5,.image-text-read-more__description h6{margin-bottom:1rem}@media(min-width: 768px){.image-text-read-more__description h1,.image-text-read-more__description h2,.image-text-read-more__description h3,.image-text-read-more__description h4,.image-text-read-more__description h5,.image-text-read-more__description h6{margin-bottom:2rem}}.image-text-read-more__image{margin-top:1.5rem}@media(min-width: 768px){.image-text-read-more__image{margin-top:0}}.image-text-read-more__image svg{max-width:15.5rem}@media(min-width: 768px){.image-text-read-more__image svg{max-width:100%}}.image-text-read-more__image img{width:100%;margin-top:0.5rem;max-width:29.125rem;max-height:29.125rem;border-radius:0.3125rem}@media(min-width: 768px){.image-text-read-more__image img{margin-top:0}}.background-light .alignment-top .image-text-read-more__image img{max-height:32.75rem;max-width:32.75rem}.right .image-text-read-more__image{display:flex;justify-content:flex-end}.image-text-read-more__button{margin-top:1.375rem}@media(min-width: 768px){.image-text-read-more__button{margin-top:2rem}}.image-text-read-more__more{padding-bottom:0.25rem}.image-text-read-more__more-btn{margin-top:2rem}.image-text-read-more__more-btn svg{transition:transform var(--transition-speed) var(--transition-timing-function)}.active .image-text-read-more__more-btn svg{transform:rotate(180deg)}.image-text-read-more__more-content{display:none;padding-top:1.375rem}.image-text-read-more__more-content>*:last-child{margin-bottom:0}.image-text-read-more__more .close-label{display:none}.image-text-read-more__more.active .image-text-read-more__more-content{display:block}.image-text-read-more__more.active .close-label{display:block}.image-text-read-more__more.active .open-label{display:none}.image-text-read-more__heading{font-family:var(--alt-secondary-font-family)}@media(min-width: 768px){.image-text-read-more__heading{font-size:2.1875rem;line-height:1.4}}.image-text-read-more__description{color:var(--color--text)}.image-text-read-more__description a{color:var(--color--text)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
