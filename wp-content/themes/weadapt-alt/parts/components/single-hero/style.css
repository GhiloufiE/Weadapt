.single-hero{padding:2.5rem 0;background-color:var(--color--bg-hero);font-size:1rem;line-height:1.375}@media(min-width: 768px){.single-hero{padding:1.5rem 0}}.single-hero__row{align-items:center}.single-hero__row_top{align-items:flex-start}.single-hero__title{margin:0 0 1.125rem;font-size:1.75rem;line-height:1.4285714286}@media(min-width: 768px){.single-hero__title{font-size:2.5rem;line-height:1.4;margin-bottom:1.6875rem}}.single-hero__left,.single-hero__right{flex:0 0 100%;max-width:100%;padding:0 1rem}.single-hero__left{padding-bottom:2.5rem;display:flex;align-items:center}@media(min-width: 768px){.single-hero__left{flex:0 0 50.338%;max-width:50.338%;padding-top:3.5rem;padding-bottom:3.5rem}}.single-hero__left-inner{flex:0 0 100%;max-width:100%}.single-hero__left-inner>*:last-child{margin-bottom:0}.single-hero__right{display:flex;justify-content:flex-end;position:relative}@media(max-width: 767px){.single-hero__row_top .single-hero__right{justify-content:flex-start}}@media(min-width: 768px){.single-hero__right{flex:0 0 49.662%;max-width:49.662%}}.single-hero__excerpt{margin-bottom:1.125rem}@media(min-width: 768px){.single-hero__excerpt{margin-bottom:1.5625rem}}.single-hero__action-btn{position:absolute;top:1.125rem;right:2rem}.single-hero__row_top .single-hero__action-btn{position:relative;top:auto;right:auto}@media(min-width: 768px){.single-hero__action-btn{top:1.5rem}}@media(min-width: 1216px){.single-hero__action-btn{right:0}}.single-hero__action-btn .wp-block-button__link:hover{background:var(--static-color--white);border-color:var(--static-color--white);color:var(--static-color--black)}.single-hero__action-btn .wp-block-button__link:not(.is-joined) .icon-delete{display:none}.single-hero__action-btn .wp-block-button__link.is-joined .icon-add{display:none}.single-hero__image{max-width:29.125rem;border-radius:0.3125rem;position:relative;width:100%;height:100%;display:block}.single-hero__image::before{content:"";display:block;padding-bottom:100%}.single-hero__image img{border-radius:0.3125rem;position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover}.single-organisation .single-hero__image img{object-fit:contain}.single-hero__type.wp-block-button.is-style-outline-small .wp-block-button__link{min-height:1.625rem;padding-top:0.0625rem;padding-bottom:0.0625rem;height:auto;font-size:0.75rem;line-height:1.6666666667}.single-hero__types{margin:0 0 0.75rem}@media(min-width: 768px){.single-hero__types{margin-bottom:1.25rem}}.single-hero__types span{display:inline-flex;justify-content:center;align-items:center;min-height:1.625rem;height:auto;padding:0.0625rem 0.9375rem;font-size:0.75rem;line-height:1.6666666667;color:var(--color--text);background-color:rgba(0,0,0,0);font-weight:var(--font-weight-heading);font-family:var(--font-family-headings);border:0.125rem solid var(--color--black);border-radius:0.3125rem}.single-hero__author{display:inline-flex;flex-wrap:wrap;align-items:center;gap:1rem;margin:0 0 1.125rem;color:var(--color--text);position:relative}@media(min-width: 768px){.single-hero__author{margin-bottom:1.625rem}}.post-meta{display:flex;flex-wrap:wrap;gap:1.25rem 1rem;max-width:100%;padding:0;margin:0;list-style:none;font-size:0.875rem;line-height:1}@media(min-width: 768px){.post-meta{gap:2rem}}.post-meta__item{display:flex;align-items:center}.post-meta__item .icon{margin-right:0.5rem}.post-meta__item .icon svg path{stroke:currentColor;color:currentColor}.img-caption{position:relative}.img-caption__caption{max-height:75%;overflow-y:scroll;padding:0.5rem;position:absolute;right:0.5rem;bottom:0.5rem;left:0.5rem;overflow-y:auto;scrollbar-width:none;border-radius:0.3125rem;background:var(--color--quote);color:var(--color--text);font-size:0.875rem;line-height:1.4285714286}.img-caption__caption::-webkit-scrollbar{width:0;display:none}@media(min-width: 768px){.img-caption__caption{right:1rem;bottom:1rem;left:1rem}}.single-hero a{color:var(--color--white)}.single-hero__title{color:var(--color--white)}@media(min-width: 768px){.single-hero__title{font-size:2.8125rem;line-height:1.4}}.theme--dark .single-hero__title{color:var(--color--text)}.single-hero__right .wp-block-button__link{background-color:var(--color--dark-bg);border-color:var(--color--dark-bg)}.theme--dark .single-hero__right .wp-block-button__link{background-color:var(--color--text);border-color:var(--color--text)}.single-hero__right .img-caption__caption{background-color:var(--color--dark-bg);color:var(--color--white)}.theme--dark .single-hero__right .img-caption__caption{background-color:var(--color--text)}.single-hero__excerpt{color:var(--color--white)}.theme--dark .single-hero__excerpt{color:var(--color--text)}.single-hero__types .wp-block-button .wp-block-button__link:hover{border-color:var(--color--white)}.single-hero .cpt-list-item__author--multiple span{font-size:0.875rem;line-height:1.4285714286;color:var(--color--white)}.theme--dark .single-hero .cpt-list-item__author--multiple span{color:var(--color--text)}.single-hero .cpt-list-item__author-info a,.single-hero .cpt-list-item__author-info span{font-size:0.875rem;line-height:1.4285714286;color:var(--color--white)}.theme--dark .single-hero .cpt-list-item__author-info a,.theme--dark .single-hero .cpt-list-item__author-info span{color:var(--color--text)}.single-hero .event_date{color:var(--color--white)}.theme--dark .single-hero .event_date{color:var(--color--text)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
